{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1471711162505},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1471711162505},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1471711162505},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1471711162505},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1471711162505},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1471711162505},{"_id":"source/_posts/WNDR-4300-OpenWrt.md","hash":"8b94c892a5aaebe6c5ecf557015879faaad3903c","modified":1471785890725},{"_id":"source/_posts/build-shadowsocks-server.md","hash":"fedf4cb3d26cb2c7a00140a30e876695c034c1a8","modified":1471712631007},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1471711162456},{"_id":"source/_posts/java-web-crawling-startup.md","hash":"8835d9897db5357eddc29e88626df81b5b418671","modified":1471784592497},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1471711162554},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1471711162554},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1471711162554},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1471711162557},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1471711162573},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1471711162573},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1471711162573},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1471711162653},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1471711162698},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1471711162698},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1471711162724},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1471711162699},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1471711162699},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1471711162699},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1471711162521},{"_id":"source/_posts/WNDR-4300-OpenWrt/openNcpa.png","hash":"94894ab4e508a3f4cd037bab6cf1220b2f2c6b13","modified":1471713411090},{"_id":"source/_posts/WNDR-4300-OpenWrt/property.png","hash":"f4ffe56c6698c2efd72539452b6d16d766163552","modified":1471713440364},{"_id":"source/_posts/WNDR-4300-OpenWrt/selectEtherNet.png","hash":"7b1152d4800aabd993c94f432594168003a7cae3","modified":1471713435890},{"_id":"source/_posts/WNDR-4300-OpenWrt/selectIPV4.png","hash":"857d6531df3c5165342c1b4f674f1dda9e8a2f44","modified":1471713444266},{"_id":"source/_posts/WNDR-4300-OpenWrt/setIPV4.png","hash":"d8977b5cc827f5ab61d8223cf9ed6ee566c9d904","modified":1471713447995},{"_id":"source/_posts/build-shadowsocks-server/charge.png","hash":"b540a09d8249a63140ee3b02301568791453fe44","modified":1471076145486},{"_id":"source/_posts/build-shadowsocks-server/selectServer.png","hash":"d2675ac42e7b2f73779b1eb3dc426a4eec93ea54","modified":1471533073267},{"_id":"source/_posts/build-shadowsocks-server/selectLocation2.png","hash":"bcd96e408ebf18e3968f28d2763c2789499b2fd1","modified":1471533123479},{"_id":"source/_posts/build-shadowsocks-server/selectServer4.png","hash":"456d976424143c2806bb6eb1c3c3a8d42131031d","modified":1471533566281},{"_id":"source/_posts/java-web-crawling-startup/edit_system_varaiable1.png","hash":"fbb81e7253abd63359a91168f72f8a28cce796cb","modified":1471710237399},{"_id":"source/_posts/java-web-crawling-startup/edit_system_varaiable.png","hash":"6a52dbd84174b1d7845abc6886f93d00621454f1","modified":1471710139806},{"_id":"source/_posts/java-web-crawling-startup/open_system_varaible.png","hash":"ad6eba0680af16df69299e4581aec435ee5e59ce","modified":1471705717820},{"_id":"source/_posts/java-web-crawling-startup/run_cmd.png","hash":"5e35b7cd9d82daa69225f21ca678b4f388f50e74","modified":1471710328449},{"_id":"source/_posts/java-web-crawling-startup/select-path.png","hash":"44c3dbdc8f553fcd947dda41eda97b5d110e7405","modified":1471705841454},{"_id":"source/_posts/java-web-crawling-startup/system_properties.png","hash":"d20ad95a93fe0f04506dde4f8aff193cffcaa3ac","modified":1471705779600},{"_id":"source/_posts/java-web-crawling-startup/test_ant.png","hash":"28a3e4aa9d7a300a70f2c02fd9315ff22dc8bdc7","modified":1471710391163},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1471711162953},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1471711162953},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1471711162969},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1471711162969},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1471711162969},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1471711162969},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1471711163003},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1471711162969},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1471711162969},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1471711162969},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1471711162953},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1471711162953},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1471711162969},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1471711162953},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1471711162953},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1471711162811},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1471711162872},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1471711162872},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1471711162812},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1471711162872},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1471711162872},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1471711162872},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1471711162953},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1471711162872},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1471711162922},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1471711162999},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1471711162997},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1471711162637},{"_id":"source/_posts/build-shadowsocks-server/bind-credit-card.png","hash":"94965926b28b99c27abce00d806f9be77b85f75b","modified":1471075306850},{"_id":"source/_posts/build-shadowsocks-server/bind-credit-card2.png","hash":"ca9da51a25b8815167857e10e5bba34321de537a","modified":1471075956480},{"_id":"source/_posts/build-shadowsocks-server/selectLocation.png","hash":"a5acfc2e5c37306f9cc1ab75b94c520f3eeeae80","modified":1471532156568},{"_id":"source/_posts/build-shadowsocks-server/selectServer2.png","hash":"d87dfd5332514601b707e1694349975f2c8c4223","modified":1471533247777},{"_id":"source/_posts/build-shadowsocks-server/selectServer3.png","hash":"d6f639ef6696b7b8547193b4054f0ab575d4b452","modified":1471533529945},{"_id":"source/_posts/build-shadowsocks-server/vultr2016-1.jpg","hash":"5acb059d218b1b21629da13a451ca3399a3867c6","modified":1470576864405},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1471711163021},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1471711163020},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1471711163021},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1471711163023},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1471711163022},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1471711163021},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1471711163009},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1471711163005},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1471711163008},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1471711163009},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1471711163011},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1471711163011},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1471711163010},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1471711163010},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1471711163010},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1471711163011},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1471711163001},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1471711163001},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1471711163010},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1471711163023},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1471711163008},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1471711163011},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1471711163011},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1471711163012},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1471711163012},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1471711163012},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1471711163023},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1471711163018},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1471711163023},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1471711163023},{"_id":"public/2016/08/18/build-shadowsocks-server/index.html","hash":"61717f5cbb5bcda6be0102684d5e70b4fb9ffa00","modified":1471790232453},{"_id":"public/2016/07/02/WNDR-4300-OpenWrt/index.html","hash":"5394c713a2d40fa3d8c2546130236a37c305ab26","modified":1471790232453},{"_id":"public/2016/06/19/hello-world/index.html","hash":"ab6c8828ed5f6729ec3906601ce76cc567660955","modified":1471790232453},{"_id":"public/categories/技术/index.html","hash":"1b370d74706ce0b447254072c57ebe80de7ba7dd","modified":1471790232453},{"_id":"public/archives/index.html","hash":"f1ddfe5fb965b2c92c1938bddf9e925fb049143f","modified":1471790232453},{"_id":"public/archives/2016/index.html","hash":"b3c129258fe839a63b1f502ed5e6b8d0d74ae1a0","modified":1471790232453},{"_id":"public/archives/2016/06/index.html","hash":"dc587accee34933430f94a18259bfaf4b02c1e24","modified":1471790232453},{"_id":"public/archives/2016/07/index.html","hash":"b29ffd181d10fa6f24b94d4c7aff180095007dc5","modified":1471790232453},{"_id":"public/archives/2016/08/index.html","hash":"34af4ec37eb22f8c2a109126020dc7a7e0b1dbcf","modified":1471790232453},{"_id":"public/tags/科学上网/index.html","hash":"ab7294f2912e272957e60698c7b3404516a3e2ec","modified":1471790232453},{"_id":"public/tags/java/index.html","hash":"d8395653b5deb7cd43dc43c03804504884d15b0e","modified":1471790232453},{"_id":"public/tags/爬虫/index.html","hash":"e638285b97c06fdab0b56d6ce1864e0094c9d4ea","modified":1471790232453},{"_id":"public/tags/文字图像识别/index.html","hash":"53b2d67557d22544796d63f6189af848860f8e9e","modified":1471790232453},{"_id":"public/2016/08/18/java-web-crawling-startup/index.html","hash":"ae3b8e86bfc145b90e38a7b155f3ed2b1c9bf00d","modified":1471790232453},{"_id":"public/index.html","hash":"48e6f5d49e41bf358cd38775289b7ee336ae2656","modified":1471790232453},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1471790232469},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1471790232469},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1471790232469},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1471790232469},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1471790232469},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1471790232469},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1471790232469},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1471790232469},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1471790232469},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1471790232469},{"_id":"public/2016/07/02/WNDR-4300-OpenWrt/openNcpa.png","hash":"94894ab4e508a3f4cd037bab6cf1220b2f2c6b13","modified":1471790232469},{"_id":"public/2016/07/02/WNDR-4300-OpenWrt/property.png","hash":"f4ffe56c6698c2efd72539452b6d16d766163552","modified":1471790232469},{"_id":"public/2016/07/02/WNDR-4300-OpenWrt/selectEtherNet.png","hash":"7b1152d4800aabd993c94f432594168003a7cae3","modified":1471790232469},{"_id":"public/2016/07/02/WNDR-4300-OpenWrt/selectIPV4.png","hash":"857d6531df3c5165342c1b4f674f1dda9e8a2f44","modified":1471790232469},{"_id":"public/2016/07/02/WNDR-4300-OpenWrt/setIPV4.png","hash":"d8977b5cc827f5ab61d8223cf9ed6ee566c9d904","modified":1471790232469},{"_id":"public/2016/08/18/java-web-crawling-startup/edit_system_varaiable.png","hash":"6a52dbd84174b1d7845abc6886f93d00621454f1","modified":1471790232469},{"_id":"public/2016/08/18/java-web-crawling-startup/edit_system_varaiable1.png","hash":"fbb81e7253abd63359a91168f72f8a28cce796cb","modified":1471790232469},{"_id":"public/2016/08/18/java-web-crawling-startup/open_system_varaible.png","hash":"ad6eba0680af16df69299e4581aec435ee5e59ce","modified":1471790232469},{"_id":"public/2016/08/18/java-web-crawling-startup/run_cmd.png","hash":"5e35b7cd9d82daa69225f21ca678b4f388f50e74","modified":1471790232469},{"_id":"public/2016/08/18/java-web-crawling-startup/select-path.png","hash":"44c3dbdc8f553fcd947dda41eda97b5d110e7405","modified":1471790232469},{"_id":"public/2016/08/18/java-web-crawling-startup/system_properties.png","hash":"d20ad95a93fe0f04506dde4f8aff193cffcaa3ac","modified":1471790232469},{"_id":"public/2016/08/18/java-web-crawling-startup/test_ant.png","hash":"28a3e4aa9d7a300a70f2c02fd9315ff22dc8bdc7","modified":1471790232469},{"_id":"public/2016/08/18/build-shadowsocks-server/charge.png","hash":"b540a09d8249a63140ee3b02301568791453fe44","modified":1471790232469},{"_id":"public/2016/08/18/build-shadowsocks-server/selectLocation2.png","hash":"bcd96e408ebf18e3968f28d2763c2789499b2fd1","modified":1471790232469},{"_id":"public/2016/08/18/build-shadowsocks-server/selectServer.png","hash":"d2675ac42e7b2f73779b1eb3dc426a4eec93ea54","modified":1471790232469},{"_id":"public/2016/08/18/build-shadowsocks-server/selectServer4.png","hash":"456d976424143c2806bb6eb1c3c3a8d42131031d","modified":1471790232469},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1471790233421},{"_id":"public/2016/08/18/build-shadowsocks-server/bind-credit-card.png","hash":"94965926b28b99c27abce00d806f9be77b85f75b","modified":1471790233421},{"_id":"public/2016/08/18/build-shadowsocks-server/bind-credit-card2.png","hash":"ca9da51a25b8815167857e10e5bba34321de537a","modified":1471790233421},{"_id":"public/2016/08/18/build-shadowsocks-server/selectLocation.png","hash":"a5acfc2e5c37306f9cc1ab75b94c520f3eeeae80","modified":1471790233421},{"_id":"public/2016/08/18/build-shadowsocks-server/selectServer2.png","hash":"d87dfd5332514601b707e1694349975f2c8c4223","modified":1471790233421},{"_id":"public/2016/08/18/build-shadowsocks-server/selectServer3.png","hash":"d6f639ef6696b7b8547193b4054f0ab575d4b452","modified":1471790233421},{"_id":"public/2016/08/18/build-shadowsocks-server/vultr2016-1.jpg","hash":"5acb059d218b1b21629da13a451ca3399a3867c6","modified":1471790233421},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1471790233471},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1471790233471},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1471790233471},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1471790233471},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1471790233471},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1471790233471},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1471790233471},{"_id":"public/css/style.css","hash":"fffb3966bf36057a325498aba9ce3a2ea7bd79e1","modified":1471790233471},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1471790233471},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1471790233471},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1471790233471},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1471790233471}],"Category":[{"name":"技术","_id":"cis4pwiur00039k9jp13d6q9r"}],"Data":[],"Page":[],"Post":[{"title":"WNDR-4300-shadowsock代理路由器搭建","date":"2016-07-02T12:45:01.000Z","_content":"## 给路由器刷OpenWrt系统\n\n## 事前准备\n###  NETGEAR-WNDR-4300\n  淘宝入手，全新250左右，二手150左右，怕风险就多花钱，穷人心大不在意外观的就二手（WNDR4300的穿墙性能不是很强，家里墙多的需可能需要考虑别的方案）\n### 牙签（回形针、手机取卡器）\n  用来按路由器的重置键，以便刷系统\n### 网线，两根\n  一根用来连接猫和路由（这根建议尽量长一点，尽量能让路由放在电脑旁边），一根用来连接路由和电脑\n\n\n### A \n  用网线将PC和路由器的任意一个LAN口连接（路由器有5个口插网线，LAN口用来接上网设备，WAN口接猫，接口下面会写明那个是LAN口那个是WAN口）\n\n### B 设置PC的本地IP（局域网IP）为192.168.1.2\n#### B1 \n  按win+R(win就是键盘上ctrl隔壁的那个小旗子)\n#### B2 \n  输入Ncpa.cpl，点击确定\n{% asset_img openNcpa.png %}\n#### B3\n  找到连着路由器的网络连接（用网线的话，就找到图标带网线的那个网络连接，如下图）\n{% asset_img selectEtherNet.png %}\n#### B4 \n右键-属性\n{% asset_img property.png %}\n#### B5 \n选择IPV4-属性\n{% asset_img selectIPV4.png %}\n#### B6 \n如图配置，DNS可不填\n{% asset_img setIPV4.png %}\n#### B7 \n将路由器断电\n#### B8 \n  用牙签（或其他细长物体）摁一下路由器后面的重置键（ Restore Factory Settings，在电源键附近）\n#### B9 \n开启路由器\n#### B10\n按win+R(win就是键盘上ctrl隔壁的那个小旗子) 输入cmd\n#### B11 \n输入命令\nping 192.168.1.1\n  如果ping没有超时则证明已经成功连上路由器\n  没ping通则需要检查前面各个步骤，其中B3尤其可能出错，很可能改了无线连接而非有线连接的局域网IP\n\n### C 安装OpenWrt\n#### C1\n下载OpenWrt\n    <b><a href=\"https://downloads.openwrt.org/latest/ar71xx/nand/openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img\">下载OpenWrt</a></b>\n#### C2\n  假设openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img装在F盘的soft文件夹（F:\\soft）\n  按win+R(win就是键盘上ctrl隔壁的那个小旗子) 输入cmd\n{% codeblock %}\nF:\n{% endcodeblock %}\n{% codeblock %}\ncd F:\\soft\n{% endcodeblock %}\n{% asset_img cmd.png %}\n\n### D 重启\n#### D1 \n  完成上述步骤后，等两三分钟，等路由器重启，期间可以做点爱做的事情\n#### D2\n  路由器重启成功后，电源指示灯亮绿色，这个时候关电源，然后再开机，如果一切正常，开机后路由器的2.4GHz 和 5GHz的等都会亮\n\n  只要出了问题，重启都能解决\n\n### E 配置openwrt\n#### E1 下载putty\n","source":"_posts/WNDR-4300-OpenWrt.md","raw":"---\ntitle: WNDR-4300-shadowsock代理路由器搭建\ndate: 2016-07-02 20:45:01\ntags:\n- 科学上网\ncategories:\n- 技术\n---\n## 给路由器刷OpenWrt系统\n\n## 事前准备\n###  NETGEAR-WNDR-4300\n  淘宝入手，全新250左右，二手150左右，怕风险就多花钱，穷人心大不在意外观的就二手（WNDR4300的穿墙性能不是很强，家里墙多的需可能需要考虑别的方案）\n### 牙签（回形针、手机取卡器）\n  用来按路由器的重置键，以便刷系统\n### 网线，两根\n  一根用来连接猫和路由（这根建议尽量长一点，尽量能让路由放在电脑旁边），一根用来连接路由和电脑\n\n\n### A \n  用网线将PC和路由器的任意一个LAN口连接（路由器有5个口插网线，LAN口用来接上网设备，WAN口接猫，接口下面会写明那个是LAN口那个是WAN口）\n\n### B 设置PC的本地IP（局域网IP）为192.168.1.2\n#### B1 \n  按win+R(win就是键盘上ctrl隔壁的那个小旗子)\n#### B2 \n  输入Ncpa.cpl，点击确定\n{% asset_img openNcpa.png %}\n#### B3\n  找到连着路由器的网络连接（用网线的话，就找到图标带网线的那个网络连接，如下图）\n{% asset_img selectEtherNet.png %}\n#### B4 \n右键-属性\n{% asset_img property.png %}\n#### B5 \n选择IPV4-属性\n{% asset_img selectIPV4.png %}\n#### B6 \n如图配置，DNS可不填\n{% asset_img setIPV4.png %}\n#### B7 \n将路由器断电\n#### B8 \n  用牙签（或其他细长物体）摁一下路由器后面的重置键（ Restore Factory Settings，在电源键附近）\n#### B9 \n开启路由器\n#### B10\n按win+R(win就是键盘上ctrl隔壁的那个小旗子) 输入cmd\n#### B11 \n输入命令\nping 192.168.1.1\n  如果ping没有超时则证明已经成功连上路由器\n  没ping通则需要检查前面各个步骤，其中B3尤其可能出错，很可能改了无线连接而非有线连接的局域网IP\n\n### C 安装OpenWrt\n#### C1\n下载OpenWrt\n    <b><a href=\"https://downloads.openwrt.org/latest/ar71xx/nand/openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img\">下载OpenWrt</a></b>\n#### C2\n  假设openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img装在F盘的soft文件夹（F:\\soft）\n  按win+R(win就是键盘上ctrl隔壁的那个小旗子) 输入cmd\n{% codeblock %}\nF:\n{% endcodeblock %}\n{% codeblock %}\ncd F:\\soft\n{% endcodeblock %}\n{% asset_img cmd.png %}\n\n### D 重启\n#### D1 \n  完成上述步骤后，等两三分钟，等路由器重启，期间可以做点爱做的事情\n#### D2\n  路由器重启成功后，电源指示灯亮绿色，这个时候关电源，然后再开机，如果一切正常，开机后路由器的2.4GHz 和 5GHz的等都会亮\n\n  只要出了问题，重启都能解决\n\n### E 配置openwrt\n#### E1 下载putty\n","slug":"WNDR-4300-OpenWrt","published":1,"updated":"2016-08-21T13:24:50.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4pwiuc00009k9jzq42jcwt","content":"<h2 id=\"给路由器刷OpenWrt系统\"><a href=\"#给路由器刷OpenWrt系统\" class=\"headerlink\" title=\"给路由器刷OpenWrt系统\"></a>给路由器刷OpenWrt系统</h2><h2 id=\"事前准备\"><a href=\"#事前准备\" class=\"headerlink\" title=\"事前准备\"></a>事前准备</h2><h3 id=\"NETGEAR-WNDR-4300\"><a href=\"#NETGEAR-WNDR-4300\" class=\"headerlink\" title=\"NETGEAR-WNDR-4300\"></a>NETGEAR-WNDR-4300</h3><p>  淘宝入手，全新250左右，二手150左右，怕风险就多花钱，穷人心大不在意外观的就二手（WNDR4300的穿墙性能不是很强，家里墙多的需可能需要考虑别的方案）</p>\n<h3 id=\"牙签（回形针、手机取卡器）\"><a href=\"#牙签（回形针、手机取卡器）\" class=\"headerlink\" title=\"牙签（回形针、手机取卡器）\"></a>牙签（回形针、手机取卡器）</h3><p>  用来按路由器的重置键，以便刷系统</p>\n<h3 id=\"网线，两根\"><a href=\"#网线，两根\" class=\"headerlink\" title=\"网线，两根\"></a>网线，两根</h3><p>  一根用来连接猫和路由（这根建议尽量长一点，尽量能让路由放在电脑旁边），一根用来连接路由和电脑</p>\n<h3 id=\"A\"><a href=\"#A\" class=\"headerlink\" title=\"A\"></a>A</h3><p>  用网线将PC和路由器的任意一个LAN口连接（路由器有5个口插网线，LAN口用来接上网设备，WAN口接猫，接口下面会写明那个是LAN口那个是WAN口）</p>\n<h3 id=\"B-设置PC的本地IP（局域网IP）为192-168-1-2\"><a href=\"#B-设置PC的本地IP（局域网IP）为192-168-1-2\" class=\"headerlink\" title=\"B 设置PC的本地IP（局域网IP）为192.168.1.2\"></a>B 设置PC的本地IP（局域网IP）为192.168.1.2</h3><h4 id=\"B1\"><a href=\"#B1\" class=\"headerlink\" title=\"B1\"></a>B1</h4><p>  按win+R(win就是键盘上ctrl隔壁的那个小旗子)</p>\n<h4 id=\"B2\"><a href=\"#B2\" class=\"headerlink\" title=\"B2\"></a>B2</h4><p>  输入Ncpa.cpl，点击确定<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/openNcpa.png\" alt=\"openNcpa.png\" title=\"\"></p>\n<h4 id=\"B3\"><a href=\"#B3\" class=\"headerlink\" title=\"B3\"></a>B3</h4><p>  找到连着路由器的网络连接（用网线的话，就找到图标带网线的那个网络连接，如下图）<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/selectEtherNet.png\" alt=\"selectEtherNet.png\" title=\"\"></p>\n<h4 id=\"B4\"><a href=\"#B4\" class=\"headerlink\" title=\"B4\"></a>B4</h4><p>右键-属性<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/property.png\" alt=\"property.png\" title=\"\"></p>\n<h4 id=\"B5\"><a href=\"#B5\" class=\"headerlink\" title=\"B5\"></a>B5</h4><p>选择IPV4-属性<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/selectIPV4.png\" alt=\"selectIPV4.png\" title=\"\"></p>\n<h4 id=\"B6\"><a href=\"#B6\" class=\"headerlink\" title=\"B6\"></a>B6</h4><p>如图配置，DNS可不填<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/setIPV4.png\" alt=\"setIPV4.png\" title=\"\"></p>\n<h4 id=\"B7\"><a href=\"#B7\" class=\"headerlink\" title=\"B7\"></a>B7</h4><p>将路由器断电</p>\n<h4 id=\"B8\"><a href=\"#B8\" class=\"headerlink\" title=\"B8\"></a>B8</h4><p>  用牙签（或其他细长物体）摁一下路由器后面的重置键（ Restore Factory Settings，在电源键附近）</p>\n<h4 id=\"B9\"><a href=\"#B9\" class=\"headerlink\" title=\"B9\"></a>B9</h4><p>开启路由器</p>\n<h4 id=\"B10\"><a href=\"#B10\" class=\"headerlink\" title=\"B10\"></a>B10</h4><p>按win+R(win就是键盘上ctrl隔壁的那个小旗子) 输入cmd</p>\n<h4 id=\"B11\"><a href=\"#B11\" class=\"headerlink\" title=\"B11\"></a>B11</h4><p>输入命令<br>ping 192.168.1.1<br>  如果ping没有超时则证明已经成功连上路由器<br>  没ping通则需要检查前面各个步骤，其中B3尤其可能出错，很可能改了无线连接而非有线连接的局域网IP</p>\n<h3 id=\"C-安装OpenWrt\"><a href=\"#C-安装OpenWrt\" class=\"headerlink\" title=\"C 安装OpenWrt\"></a>C 安装OpenWrt</h3><h4 id=\"C1\"><a href=\"#C1\" class=\"headerlink\" title=\"C1\"></a>C1</h4><p>下载OpenWrt<br>    <b><a href=\"https://downloads.openwrt.org/latest/ar71xx/nand/openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img\" target=\"_blank\" rel=\"external\">下载OpenWrt</a></b></p>\n<h4 id=\"C2\"><a href=\"#C2\" class=\"headerlink\" title=\"C2\"></a>C2</h4><p>  假设openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img装在F盘的soft文件夹（F:\\soft）<br>  按win+R(win就是键盘上ctrl隔壁的那个小旗子) 输入cmd<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">F:</div></pre></td></tr></table></figure><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd F:\\soft</div></pre></td></tr></table></figure><br></p>\n<h3 id=\"D-重启\"><a href=\"#D-重启\" class=\"headerlink\" title=\"D 重启\"></a>D 重启</h3><h4 id=\"D1\"><a href=\"#D1\" class=\"headerlink\" title=\"D1\"></a>D1</h4><p>  完成上述步骤后，等两三分钟，等路由器重启，期间可以做点爱做的事情</p>\n<h4 id=\"D2\"><a href=\"#D2\" class=\"headerlink\" title=\"D2\"></a>D2</h4><p>  路由器重启成功后，电源指示灯亮绿色，这个时候关电源，然后再开机，如果一切正常，开机后路由器的2.4GHz 和 5GHz的等都会亮</p>\n<p>  只要出了问题，重启都能解决</p>\n<h3 id=\"E-配置openwrt\"><a href=\"#E-配置openwrt\" class=\"headerlink\" title=\"E 配置openwrt\"></a>E 配置openwrt</h3><h4 id=\"E1-下载putty\"><a href=\"#E1-下载putty\" class=\"headerlink\" title=\"E1 下载putty\"></a>E1 下载putty</h4>","excerpt":"","more":"<h2 id=\"给路由器刷OpenWrt系统\"><a href=\"#给路由器刷OpenWrt系统\" class=\"headerlink\" title=\"给路由器刷OpenWrt系统\"></a>给路由器刷OpenWrt系统</h2><h2 id=\"事前准备\"><a href=\"#事前准备\" class=\"headerlink\" title=\"事前准备\"></a>事前准备</h2><h3 id=\"NETGEAR-WNDR-4300\"><a href=\"#NETGEAR-WNDR-4300\" class=\"headerlink\" title=\"NETGEAR-WNDR-4300\"></a>NETGEAR-WNDR-4300</h3><p>  淘宝入手，全新250左右，二手150左右，怕风险就多花钱，穷人心大不在意外观的就二手（WNDR4300的穿墙性能不是很强，家里墙多的需可能需要考虑别的方案）</p>\n<h3 id=\"牙签（回形针、手机取卡器）\"><a href=\"#牙签（回形针、手机取卡器）\" class=\"headerlink\" title=\"牙签（回形针、手机取卡器）\"></a>牙签（回形针、手机取卡器）</h3><p>  用来按路由器的重置键，以便刷系统</p>\n<h3 id=\"网线，两根\"><a href=\"#网线，两根\" class=\"headerlink\" title=\"网线，两根\"></a>网线，两根</h3><p>  一根用来连接猫和路由（这根建议尽量长一点，尽量能让路由放在电脑旁边），一根用来连接路由和电脑</p>\n<h3 id=\"A\"><a href=\"#A\" class=\"headerlink\" title=\"A\"></a>A</h3><p>  用网线将PC和路由器的任意一个LAN口连接（路由器有5个口插网线，LAN口用来接上网设备，WAN口接猫，接口下面会写明那个是LAN口那个是WAN口）</p>\n<h3 id=\"B-设置PC的本地IP（局域网IP）为192-168-1-2\"><a href=\"#B-设置PC的本地IP（局域网IP）为192-168-1-2\" class=\"headerlink\" title=\"B 设置PC的本地IP（局域网IP）为192.168.1.2\"></a>B 设置PC的本地IP（局域网IP）为192.168.1.2</h3><h4 id=\"B1\"><a href=\"#B1\" class=\"headerlink\" title=\"B1\"></a>B1</h4><p>  按win+R(win就是键盘上ctrl隔壁的那个小旗子)</p>\n<h4 id=\"B2\"><a href=\"#B2\" class=\"headerlink\" title=\"B2\"></a>B2</h4><p>  输入Ncpa.cpl，点击确定<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/openNcpa.png\" alt=\"openNcpa.png\" title=\"\"></p>\n<h4 id=\"B3\"><a href=\"#B3\" class=\"headerlink\" title=\"B3\"></a>B3</h4><p>  找到连着路由器的网络连接（用网线的话，就找到图标带网线的那个网络连接，如下图）<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/selectEtherNet.png\" alt=\"selectEtherNet.png\" title=\"\"></p>\n<h4 id=\"B4\"><a href=\"#B4\" class=\"headerlink\" title=\"B4\"></a>B4</h4><p>右键-属性<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/property.png\" alt=\"property.png\" title=\"\"></p>\n<h4 id=\"B5\"><a href=\"#B5\" class=\"headerlink\" title=\"B5\"></a>B5</h4><p>选择IPV4-属性<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/selectIPV4.png\" alt=\"selectIPV4.png\" title=\"\"></p>\n<h4 id=\"B6\"><a href=\"#B6\" class=\"headerlink\" title=\"B6\"></a>B6</h4><p>如图配置，DNS可不填<br><img src=\"/blog/2016/07/02/WNDR-4300-OpenWrt/setIPV4.png\" alt=\"setIPV4.png\" title=\"\"></p>\n<h4 id=\"B7\"><a href=\"#B7\" class=\"headerlink\" title=\"B7\"></a>B7</h4><p>将路由器断电</p>\n<h4 id=\"B8\"><a href=\"#B8\" class=\"headerlink\" title=\"B8\"></a>B8</h4><p>  用牙签（或其他细长物体）摁一下路由器后面的重置键（ Restore Factory Settings，在电源键附近）</p>\n<h4 id=\"B9\"><a href=\"#B9\" class=\"headerlink\" title=\"B9\"></a>B9</h4><p>开启路由器</p>\n<h4 id=\"B10\"><a href=\"#B10\" class=\"headerlink\" title=\"B10\"></a>B10</h4><p>按win+R(win就是键盘上ctrl隔壁的那个小旗子) 输入cmd</p>\n<h4 id=\"B11\"><a href=\"#B11\" class=\"headerlink\" title=\"B11\"></a>B11</h4><p>输入命令<br>ping 192.168.1.1<br>  如果ping没有超时则证明已经成功连上路由器<br>  没ping通则需要检查前面各个步骤，其中B3尤其可能出错，很可能改了无线连接而非有线连接的局域网IP</p>\n<h3 id=\"C-安装OpenWrt\"><a href=\"#C-安装OpenWrt\" class=\"headerlink\" title=\"C 安装OpenWrt\"></a>C 安装OpenWrt</h3><h4 id=\"C1\"><a href=\"#C1\" class=\"headerlink\" title=\"C1\"></a>C1</h4><p>下载OpenWrt<br>    <b><a href=\"https://downloads.openwrt.org/latest/ar71xx/nand/openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img\">下载OpenWrt</a></b></p>\n<h4 id=\"C2\"><a href=\"#C2\" class=\"headerlink\" title=\"C2\"></a>C2</h4><p>  假设openwrt-15.05.1-ar71xx-nand-wndr4300-ubi-factory.img装在F盘的soft文件夹（F:\\soft）<br>  按win+R(win就是键盘上ctrl隔壁的那个小旗子) 输入cmd<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">F:</div></pre></td></tr></table></figure><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd F:\\soft</div></pre></td></tr></table></figure><br></p>\n<h3 id=\"D-重启\"><a href=\"#D-重启\" class=\"headerlink\" title=\"D 重启\"></a>D 重启</h3><h4 id=\"D1\"><a href=\"#D1\" class=\"headerlink\" title=\"D1\"></a>D1</h4><p>  完成上述步骤后，等两三分钟，等路由器重启，期间可以做点爱做的事情</p>\n<h4 id=\"D2\"><a href=\"#D2\" class=\"headerlink\" title=\"D2\"></a>D2</h4><p>  路由器重启成功后，电源指示灯亮绿色，这个时候关电源，然后再开机，如果一切正常，开机后路由器的2.4GHz 和 5GHz的等都会亮</p>\n<p>  只要出了问题，重启都能解决</p>\n<h3 id=\"E-配置openwrt\"><a href=\"#E-配置openwrt\" class=\"headerlink\" title=\"E 配置openwrt\"></a>E 配置openwrt</h3><h4 id=\"E1-下载putty\"><a href=\"#E1-下载putty\" class=\"headerlink\" title=\"E1 下载putty\"></a>E1 下载putty</h4>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-06-19T12:14:17.459Z","updated":"2016-08-20T16:39:22.456Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4pwiur00019k9jmupoit0u","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"搭建shadowsocks服务器","date":"2016-08-18T14:48:44.000Z","_content":"\n## 搭建shadowsocks服务器\n\n## 事前准备\n###  一张信用卡，支持境外支付\n  可以是visa，也可以是mastercard，信用卡的申请不在本教程的范畴内，请自行去找一家离家近的银行咨询\n\n### A 申请服务器\n  本文采用的服务器供应商是vultr\n  说说本人用vultr的理由：\n  1 有日本节点\n  2 价格不贵，而且我注册的时候有优惠，进门充10美金就能用10个月\n  3 按小时收费，如果发现速度不理想或者不符合要求，可以马上停掉这台机器换一台别的\n\n#### A1 注册账号\n    <b><a href=\"http://www.vultr.com/?ref=6949606-3B\">vultr注册地址</a></b>\n\n#### A2 绑定信用卡 \n  注册之后进入图中的界面，点add new添加信用卡\n{% asset_img bind-credit-card.png %}\n{% asset_img bind-credit-card2.png %}\n\n#### A3 充钱\nPS. 点完那个按钮钱就直接冲进去了，没有确认键……别手抖连点或者错点啊\n{% asset_img charge.png %}\n\n#### A4 挑服务器\n    <b><a href=\"https://www.vultr.com/faq/#downloadspeedtests\">获取各个机房的测试节点</a></b>\n  挨个点击下图中各个机房的下载文件，找到速度最快的，记下机房所在地区（location）\n{% asset_img selectLocation.png %}\n\n  来到这个页面↓ 点加号\n{% asset_img selectServer.png %}\n\n  选择对于你来说速度最快的地区的机房\n{% asset_img selectLocation2.png %}\n\n  操作系统选ubuntu 最新版本64位，配置根据自己的经济能力选（我是选了最便宜的）\n{% asset_img selectServer2.png %}\n{% asset_img selectServer3.png %}\n\n  最后点击最下面这个按钮，等几分钟服务器就会部署完毕\n{% asset_img selectServer4.png %}\n","source":"_posts/build-shadowsocks-server.md","raw":"---\ntitle: 搭建shadowsocks服务器\ndate: 2016-08-18 22:48:44\ntags:\n- 科学上网\ncategories:\n- 技术\n---\n\n## 搭建shadowsocks服务器\n\n## 事前准备\n###  一张信用卡，支持境外支付\n  可以是visa，也可以是mastercard，信用卡的申请不在本教程的范畴内，请自行去找一家离家近的银行咨询\n\n### A 申请服务器\n  本文采用的服务器供应商是vultr\n  说说本人用vultr的理由：\n  1 有日本节点\n  2 价格不贵，而且我注册的时候有优惠，进门充10美金就能用10个月\n  3 按小时收费，如果发现速度不理想或者不符合要求，可以马上停掉这台机器换一台别的\n\n#### A1 注册账号\n    <b><a href=\"http://www.vultr.com/?ref=6949606-3B\">vultr注册地址</a></b>\n\n#### A2 绑定信用卡 \n  注册之后进入图中的界面，点add new添加信用卡\n{% asset_img bind-credit-card.png %}\n{% asset_img bind-credit-card2.png %}\n\n#### A3 充钱\nPS. 点完那个按钮钱就直接冲进去了，没有确认键……别手抖连点或者错点啊\n{% asset_img charge.png %}\n\n#### A4 挑服务器\n    <b><a href=\"https://www.vultr.com/faq/#downloadspeedtests\">获取各个机房的测试节点</a></b>\n  挨个点击下图中各个机房的下载文件，找到速度最快的，记下机房所在地区（location）\n{% asset_img selectLocation.png %}\n\n  来到这个页面↓ 点加号\n{% asset_img selectServer.png %}\n\n  选择对于你来说速度最快的地区的机房\n{% asset_img selectLocation2.png %}\n\n  操作系统选ubuntu 最新版本64位，配置根据自己的经济能力选（我是选了最便宜的）\n{% asset_img selectServer2.png %}\n{% asset_img selectServer3.png %}\n\n  最后点击最下面这个按钮，等几分钟服务器就会部署完毕\n{% asset_img selectServer4.png %}\n","slug":"build-shadowsocks-server","published":1,"updated":"2016-08-20T17:03:51.007Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4pwiur00049k9jmxk91j6c","content":"<h2 id=\"搭建shadowsocks服务器\"><a href=\"#搭建shadowsocks服务器\" class=\"headerlink\" title=\"搭建shadowsocks服务器\"></a>搭建shadowsocks服务器</h2><h2 id=\"事前准备\"><a href=\"#事前准备\" class=\"headerlink\" title=\"事前准备\"></a>事前准备</h2><h3 id=\"一张信用卡，支持境外支付\"><a href=\"#一张信用卡，支持境外支付\" class=\"headerlink\" title=\"一张信用卡，支持境外支付\"></a>一张信用卡，支持境外支付</h3><p>  可以是visa，也可以是mastercard，信用卡的申请不在本教程的范畴内，请自行去找一家离家近的银行咨询</p>\n<h3 id=\"A-申请服务器\"><a href=\"#A-申请服务器\" class=\"headerlink\" title=\"A 申请服务器\"></a>A 申请服务器</h3><p>  本文采用的服务器供应商是vultr<br>  说说本人用vultr的理由：<br>  1 有日本节点<br>  2 价格不贵，而且我注册的时候有优惠，进门充10美金就能用10个月<br>  3 按小时收费，如果发现速度不理想或者不符合要求，可以马上停掉这台机器换一台别的</p>\n<h4 id=\"A1-注册账号\"><a href=\"#A1-注册账号\" class=\"headerlink\" title=\"A1 注册账号\"></a>A1 注册账号</h4><pre><code>&lt;b&gt;&lt;a href=&quot;http://www.vultr.com/?ref=6949606-3B&quot;&gt;vultr注册地址&lt;/a&gt;&lt;/b&gt;\n</code></pre><h4 id=\"A2-绑定信用卡\"><a href=\"#A2-绑定信用卡\" class=\"headerlink\" title=\"A2 绑定信用卡\"></a>A2 绑定信用卡</h4><p>  注册之后进入图中的界面，点add new添加信用卡<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/bind-credit-card.png\" alt=\"bind-credit-card.png\" title=\"\"><br><img src=\"/blog/2016/08/18/build-shadowsocks-server/bind-credit-card2.png\" alt=\"bind-credit-card2.png\" title=\"\"></p>\n<h4 id=\"A3-充钱\"><a href=\"#A3-充钱\" class=\"headerlink\" title=\"A3 充钱\"></a>A3 充钱</h4><p>PS. 点完那个按钮钱就直接冲进去了，没有确认键……别手抖连点或者错点啊<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/charge.png\" alt=\"charge.png\" title=\"\"></p>\n<h4 id=\"A4-挑服务器\"><a href=\"#A4-挑服务器\" class=\"headerlink\" title=\"A4 挑服务器\"></a>A4 挑服务器</h4><pre><code>&lt;b&gt;&lt;a href=&quot;https://www.vultr.com/faq/#downloadspeedtests&quot;&gt;获取各个机房的测试节点&lt;/a&gt;&lt;/b&gt;\n</code></pre><p>  挨个点击下图中各个机房的下载文件，找到速度最快的，记下机房所在地区（location）<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectLocation.png\" alt=\"selectLocation.png\" title=\"\"></p>\n<p>  来到这个页面↓ 点加号<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectServer.png\" alt=\"selectServer.png\" title=\"\"></p>\n<p>  选择对于你来说速度最快的地区的机房<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectLocation2.png\" alt=\"selectLocation2.png\" title=\"\"></p>\n<p>  操作系统选ubuntu 最新版本64位，配置根据自己的经济能力选（我是选了最便宜的）<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectServer2.png\" alt=\"selectServer2.png\" title=\"\"><br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectServer3.png\" alt=\"selectServer3.png\" title=\"\"></p>\n<p>  最后点击最下面这个按钮，等几分钟服务器就会部署完毕<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectServer4.png\" alt=\"selectServer4.png\" title=\"\"></p>\n","excerpt":"","more":"<h2 id=\"搭建shadowsocks服务器\"><a href=\"#搭建shadowsocks服务器\" class=\"headerlink\" title=\"搭建shadowsocks服务器\"></a>搭建shadowsocks服务器</h2><h2 id=\"事前准备\"><a href=\"#事前准备\" class=\"headerlink\" title=\"事前准备\"></a>事前准备</h2><h3 id=\"一张信用卡，支持境外支付\"><a href=\"#一张信用卡，支持境外支付\" class=\"headerlink\" title=\"一张信用卡，支持境外支付\"></a>一张信用卡，支持境外支付</h3><p>  可以是visa，也可以是mastercard，信用卡的申请不在本教程的范畴内，请自行去找一家离家近的银行咨询</p>\n<h3 id=\"A-申请服务器\"><a href=\"#A-申请服务器\" class=\"headerlink\" title=\"A 申请服务器\"></a>A 申请服务器</h3><p>  本文采用的服务器供应商是vultr<br>  说说本人用vultr的理由：<br>  1 有日本节点<br>  2 价格不贵，而且我注册的时候有优惠，进门充10美金就能用10个月<br>  3 按小时收费，如果发现速度不理想或者不符合要求，可以马上停掉这台机器换一台别的</p>\n<h4 id=\"A1-注册账号\"><a href=\"#A1-注册账号\" class=\"headerlink\" title=\"A1 注册账号\"></a>A1 注册账号</h4><pre><code>&lt;b&gt;&lt;a href=&quot;http://www.vultr.com/?ref=6949606-3B&quot;&gt;vultr注册地址&lt;/a&gt;&lt;/b&gt;\n</code></pre><h4 id=\"A2-绑定信用卡\"><a href=\"#A2-绑定信用卡\" class=\"headerlink\" title=\"A2 绑定信用卡\"></a>A2 绑定信用卡</h4><p>  注册之后进入图中的界面，点add new添加信用卡<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/bind-credit-card.png\" alt=\"bind-credit-card.png\" title=\"\"><br><img src=\"/blog/2016/08/18/build-shadowsocks-server/bind-credit-card2.png\" alt=\"bind-credit-card2.png\" title=\"\"></p>\n<h4 id=\"A3-充钱\"><a href=\"#A3-充钱\" class=\"headerlink\" title=\"A3 充钱\"></a>A3 充钱</h4><p>PS. 点完那个按钮钱就直接冲进去了，没有确认键……别手抖连点或者错点啊<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/charge.png\" alt=\"charge.png\" title=\"\"></p>\n<h4 id=\"A4-挑服务器\"><a href=\"#A4-挑服务器\" class=\"headerlink\" title=\"A4 挑服务器\"></a>A4 挑服务器</h4><pre><code>&lt;b&gt;&lt;a href=&quot;https://www.vultr.com/faq/#downloadspeedtests&quot;&gt;获取各个机房的测试节点&lt;/a&gt;&lt;/b&gt;\n</code></pre><p>  挨个点击下图中各个机房的下载文件，找到速度最快的，记下机房所在地区（location）<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectLocation.png\" alt=\"selectLocation.png\" title=\"\"></p>\n<p>  来到这个页面↓ 点加号<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectServer.png\" alt=\"selectServer.png\" title=\"\"></p>\n<p>  选择对于你来说速度最快的地区的机房<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectLocation2.png\" alt=\"selectLocation2.png\" title=\"\"></p>\n<p>  操作系统选ubuntu 最新版本64位，配置根据自己的经济能力选（我是选了最便宜的）<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectServer2.png\" alt=\"selectServer2.png\" title=\"\"><br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectServer3.png\" alt=\"selectServer3.png\" title=\"\"></p>\n<p>  最后点击最下面这个按钮，等几分钟服务器就会部署完毕<br><img src=\"/blog/2016/08/18/build-shadowsocks-server/selectServer4.png\" alt=\"selectServer4.png\" title=\"\"></p>\n"},{"title":"java 爬虫入门","date":"2016-08-18T14:26:12.000Z","_content":"\n## A tesseract ocr\n### A-1 tesseract ocr简介\n  一句话概括，tesseract ocr（下文简称为tess）是惠普研发的一个文字图像识别组件，原本是用来给识别扫描仪扫出来的图片，后来进化得越来越妖，连一些简单的扭曲验证码图片也能识别成文字了。\n比较正规的介绍请看这里↓\n<b><a href=\"https://github.com/tesseract-ocr/tesseract\">tess官网</a></b>\n\n### A-2 安装tess\n#### A-2-1 安装visual C++ 2013\n  windows版的tess需要依赖visual C++ 2013\n  <b><a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=40784\">visual C++ 2013下载</a></b>\n下载完毕后双击安装\n\n### A-2-2 安装tesseract ocr\n  如无意外该步骤全程都需要翻墙\n\n###### <a href=\"https://sourceforge.net/projects/tesseract-ocr-alt/files/tesseract-ocr-setup-3.02.02.exe/download\">下载tess</a>\n  双击安装，一些步骤需要注意下\n\n## B tess4j\n  让java可以通过JNA调用tess接口，进行图像识别的工具。（不懂JNA是啥的可以问google，实在不行问百度。认不认识JNA对于阅读本文没有影响）\n###### <a href=\"http://tess4j.sourceforge.net/\">tess4j官网</a>\n\n### B-1 编译tess4j\n  网上并不容易找到预编译好又能用的tess4j，自己动手丰衣足食。（当然用maven也是可以的，但由于tess4j比较依赖本地环境，即使用maven弄下来了也可能会因为环境问题导致各种运行时错误。）\n\n#### B-1-1 安装ant\n##### B-1-1-1 下载ant\n  tess4j可以通过apache ant来进行编译\n    <b><a href=\"http://ant.apache.org/\">ant官网</a></b>\n    <b><a href=\"http://apache.claz.org//ant/binaries/apache-ant-1.9.7-bin.zip\">ant下载</a></b>\n\n##### B-1-1-2 设置环境变量\n    <b>\n      下载完毕后，假设我们把ant解压到了F盘的这个目录 ↓ \n      <br/>\n      F:\\soft\\apache-ant-1.9.7-bin\\\n    </b>\n    <b>\n      bin文件夹在这里↓ \n      <br/>\n      F:\\soft\\apache-ant-1.9.7-bin\\apache-ant-1.9.7\\bin\\\n    </b>\nwin+r(win就是左下角ctrl隔壁的小旗子)\n运行\nsysdm.cpl\n{% asset_img open_system_varaible.png %}\n{% asset_img system_properties.png %}\n{% asset_img select-path.png %}\n\n  在最后面添加一条（和其他path之间用英文的;隔开，但是末尾不要加;）\n{% codeblock %}\nF:\\soft\\apache-ant-1.9.7-bin\\apache-ant-1.9.7\\bin\n{% endcodeblock %}\n{% asset_img edit_system_varaiable1.png %}\n  （安利一下WIN10，环境变量的配置十分人性化，长这样的，羡慕吧，还不赶紧升级一起喊微软爸爸）\n{% asset_img edit_system_varaiable.png %}\n\n  最后确认一下环境变量到底加上没\nwin+r\ncmd\n{% asset_img run_cmd.png %}\n\n{% codeblock %}\nant\n{% endcodeblock %}\n  结果如图所示，就证明ant可以用了\n{% asset_img test_ant.png %}\n附录：\n    <b><a href=\"https://support.microsoft.com/en-us/kb/149648\">各种控制面板的快捷方式</a></b>\n  知道了这些，如果被人叫去修电脑，装逼效果奇佳（死屌丝码农就一修电脑的也学别人装逼，怎么装都是那副亏样，交大门口捡汽水瓶子的都比你强）\n\n#### B-1-2 编译tess4j\n##### B-1-2-1 下载tess4j\n由于tess的window傻瓜安装包只有tess3.02版本，更上面的tess3.03 3.04都需要自己编译，所以这里tess4j的源码我们也选择适应tess3.02的tess4j-2.0，想体验更高版本的新特性的高端用户可以自行编译安装tess\n    <b><a href=\"https://sourceforge.net/projects/tess4j/files/tess4j/2.0/Tess4J-2.0-src.zip/download\">tess4J 2.0源码</a></b>\n下载后，假设tess4J的源码放在了F盘这个目录\n    <b>F:/tess4j</b>\nWin+r\ncmd\n{% codeblock %}\nant\n{% endcodeblock %}\n如果出了问题，请检查自己A-2步骤有没有做对，可以重新执行一下A-2\n编译完毕后，就可以试用了\n<b><a href=\"TODO\">DEMO</a></b>\n\n## htmlunit\n### htmlunit 简介\nhtmlunit是一个模拟浏览器的工具。一般的爬虫可以通过httpClient 的get post方法实现，但是有些网站针对爬虫和攻击作了一些限制，他们会通过JS代码生成一些验证参数，如果不想花心思研究这些js代码，最方便的就是模拟浏览器直接点击渲染后的html元素。\n    <b><a href=\"http://htmlunit.sourceforge.net/\">htmlunit官网</a></b>\n    <b><a href=\"https://sourceforge.net/projects/htmlunit/files/latest/download\">htmlunit下载</a></b>\n<b><a href=\"TODO\">DEMO</a></b>\n\n## Jsoup\n### Jsoup 简介\nJsoup可以将纯文本的html转换成java对象，让用户可以进行诸如CSS Select之类的操作，让爬虫更加方便快捷。\n    <b><a href=\"https://jsoup.org/\">Jsoup官网</a></b>\n<b><a href=\"TODO\">DEMO</a></b>\n","source":"_posts/java-web-crawling-startup.md","raw":"---\ntitle: java 爬虫入门\ndate: 2016-08-18 22:26:12\ntags:\n- java\n- 爬虫\n- 文字图像识别\ncategories:\n- 技术\n---\n\n## A tesseract ocr\n### A-1 tesseract ocr简介\n  一句话概括，tesseract ocr（下文简称为tess）是惠普研发的一个文字图像识别组件，原本是用来给识别扫描仪扫出来的图片，后来进化得越来越妖，连一些简单的扭曲验证码图片也能识别成文字了。\n比较正规的介绍请看这里↓\n<b><a href=\"https://github.com/tesseract-ocr/tesseract\">tess官网</a></b>\n\n### A-2 安装tess\n#### A-2-1 安装visual C++ 2013\n  windows版的tess需要依赖visual C++ 2013\n  <b><a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=40784\">visual C++ 2013下载</a></b>\n下载完毕后双击安装\n\n### A-2-2 安装tesseract ocr\n  如无意外该步骤全程都需要翻墙\n\n###### <a href=\"https://sourceforge.net/projects/tesseract-ocr-alt/files/tesseract-ocr-setup-3.02.02.exe/download\">下载tess</a>\n  双击安装，一些步骤需要注意下\n\n## B tess4j\n  让java可以通过JNA调用tess接口，进行图像识别的工具。（不懂JNA是啥的可以问google，实在不行问百度。认不认识JNA对于阅读本文没有影响）\n###### <a href=\"http://tess4j.sourceforge.net/\">tess4j官网</a>\n\n### B-1 编译tess4j\n  网上并不容易找到预编译好又能用的tess4j，自己动手丰衣足食。（当然用maven也是可以的，但由于tess4j比较依赖本地环境，即使用maven弄下来了也可能会因为环境问题导致各种运行时错误。）\n\n#### B-1-1 安装ant\n##### B-1-1-1 下载ant\n  tess4j可以通过apache ant来进行编译\n    <b><a href=\"http://ant.apache.org/\">ant官网</a></b>\n    <b><a href=\"http://apache.claz.org//ant/binaries/apache-ant-1.9.7-bin.zip\">ant下载</a></b>\n\n##### B-1-1-2 设置环境变量\n    <b>\n      下载完毕后，假设我们把ant解压到了F盘的这个目录 ↓ \n      <br/>\n      F:\\soft\\apache-ant-1.9.7-bin\\\n    </b>\n    <b>\n      bin文件夹在这里↓ \n      <br/>\n      F:\\soft\\apache-ant-1.9.7-bin\\apache-ant-1.9.7\\bin\\\n    </b>\nwin+r(win就是左下角ctrl隔壁的小旗子)\n运行\nsysdm.cpl\n{% asset_img open_system_varaible.png %}\n{% asset_img system_properties.png %}\n{% asset_img select-path.png %}\n\n  在最后面添加一条（和其他path之间用英文的;隔开，但是末尾不要加;）\n{% codeblock %}\nF:\\soft\\apache-ant-1.9.7-bin\\apache-ant-1.9.7\\bin\n{% endcodeblock %}\n{% asset_img edit_system_varaiable1.png %}\n  （安利一下WIN10，环境变量的配置十分人性化，长这样的，羡慕吧，还不赶紧升级一起喊微软爸爸）\n{% asset_img edit_system_varaiable.png %}\n\n  最后确认一下环境变量到底加上没\nwin+r\ncmd\n{% asset_img run_cmd.png %}\n\n{% codeblock %}\nant\n{% endcodeblock %}\n  结果如图所示，就证明ant可以用了\n{% asset_img test_ant.png %}\n附录：\n    <b><a href=\"https://support.microsoft.com/en-us/kb/149648\">各种控制面板的快捷方式</a></b>\n  知道了这些，如果被人叫去修电脑，装逼效果奇佳（死屌丝码农就一修电脑的也学别人装逼，怎么装都是那副亏样，交大门口捡汽水瓶子的都比你强）\n\n#### B-1-2 编译tess4j\n##### B-1-2-1 下载tess4j\n由于tess的window傻瓜安装包只有tess3.02版本，更上面的tess3.03 3.04都需要自己编译，所以这里tess4j的源码我们也选择适应tess3.02的tess4j-2.0，想体验更高版本的新特性的高端用户可以自行编译安装tess\n    <b><a href=\"https://sourceforge.net/projects/tess4j/files/tess4j/2.0/Tess4J-2.0-src.zip/download\">tess4J 2.0源码</a></b>\n下载后，假设tess4J的源码放在了F盘这个目录\n    <b>F:/tess4j</b>\nWin+r\ncmd\n{% codeblock %}\nant\n{% endcodeblock %}\n如果出了问题，请检查自己A-2步骤有没有做对，可以重新执行一下A-2\n编译完毕后，就可以试用了\n<b><a href=\"TODO\">DEMO</a></b>\n\n## htmlunit\n### htmlunit 简介\nhtmlunit是一个模拟浏览器的工具。一般的爬虫可以通过httpClient 的get post方法实现，但是有些网站针对爬虫和攻击作了一些限制，他们会通过JS代码生成一些验证参数，如果不想花心思研究这些js代码，最方便的就是模拟浏览器直接点击渲染后的html元素。\n    <b><a href=\"http://htmlunit.sourceforge.net/\">htmlunit官网</a></b>\n    <b><a href=\"https://sourceforge.net/projects/htmlunit/files/latest/download\">htmlunit下载</a></b>\n<b><a href=\"TODO\">DEMO</a></b>\n\n## Jsoup\n### Jsoup 简介\nJsoup可以将纯文本的html转换成java对象，让用户可以进行诸如CSS Select之类的操作，让爬虫更加方便快捷。\n    <b><a href=\"https://jsoup.org/\">Jsoup官网</a></b>\n<b><a href=\"TODO\">DEMO</a></b>\n","slug":"java-web-crawling-startup","published":1,"updated":"2016-08-21T13:03:12.497Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cis4pwiur00059k9jqyg9rzpd","content":"<h2 id=\"A-tesseract-ocr\"><a href=\"#A-tesseract-ocr\" class=\"headerlink\" title=\"A tesseract ocr\"></a>A tesseract ocr</h2><h3 id=\"A-1-tesseract-ocr简介\"><a href=\"#A-1-tesseract-ocr简介\" class=\"headerlink\" title=\"A-1 tesseract ocr简介\"></a>A-1 tesseract ocr简介</h3><p>  一句话概括，tesseract ocr（下文简称为tess）是惠普研发的一个文字图像识别组件，原本是用来给识别扫描仪扫出来的图片，后来进化得越来越妖，连一些简单的扭曲验证码图片也能识别成文字了。<br>比较正规的介绍请看这里↓<br><b><a href=\"https://github.com/tesseract-ocr/tesseract\" target=\"_blank\" rel=\"external\">tess官网</a></b></p>\n<h3 id=\"A-2-安装tess\"><a href=\"#A-2-安装tess\" class=\"headerlink\" title=\"A-2 安装tess\"></a>A-2 安装tess</h3><h4 id=\"A-2-1-安装visual-C-2013\"><a href=\"#A-2-1-安装visual-C-2013\" class=\"headerlink\" title=\"A-2-1 安装visual C++ 2013\"></a>A-2-1 安装visual C++ 2013</h4><p>  windows版的tess需要依赖visual C++ 2013<br>  <b><a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=40784\" target=\"_blank\" rel=\"external\">visual C++ 2013下载</a></b><br>下载完毕后双击安装</p>\n<h3 id=\"A-2-2-安装tesseract-ocr\"><a href=\"#A-2-2-安装tesseract-ocr\" class=\"headerlink\" title=\"A-2-2 安装tesseract ocr\"></a>A-2-2 安装tesseract ocr</h3><p>  如无意外该步骤全程都需要翻墙</p>\n<h6 id=\"下载tess\"><a href=\"#下载tess\" class=\"headerlink\" title=\"下载tess\"></a><a href=\"https://sourceforge.net/projects/tesseract-ocr-alt/files/tesseract-ocr-setup-3.02.02.exe/download\" target=\"_blank\" rel=\"external\">下载tess</a></h6><p>  双击安装，一些步骤需要注意下</p>\n<h2 id=\"B-tess4j\"><a href=\"#B-tess4j\" class=\"headerlink\" title=\"B tess4j\"></a>B tess4j</h2><p>  让java可以通过JNA调用tess接口，进行图像识别的工具。（不懂JNA是啥的可以问google，实在不行问百度。认不认识JNA对于阅读本文没有影响）</p>\n<h6 id=\"tess4j官网\"><a href=\"#tess4j官网\" class=\"headerlink\" title=\"tess4j官网\"></a><a href=\"http://tess4j.sourceforge.net/\" target=\"_blank\" rel=\"external\">tess4j官网</a></h6><h3 id=\"B-1-编译tess4j\"><a href=\"#B-1-编译tess4j\" class=\"headerlink\" title=\"B-1 编译tess4j\"></a>B-1 编译tess4j</h3><p>  网上并不容易找到预编译好又能用的tess4j，自己动手丰衣足食。（当然用maven也是可以的，但由于tess4j比较依赖本地环境，即使用maven弄下来了也可能会因为环境问题导致各种运行时错误。）</p>\n<h4 id=\"B-1-1-安装ant\"><a href=\"#B-1-1-安装ant\" class=\"headerlink\" title=\"B-1-1 安装ant\"></a>B-1-1 安装ant</h4><h5 id=\"B-1-1-1-下载ant\"><a href=\"#B-1-1-1-下载ant\" class=\"headerlink\" title=\"B-1-1-1 下载ant\"></a>B-1-1-1 下载ant</h5><p>  tess4j可以通过apache ant来进行编译<br>    <b><a href=\"http://ant.apache.org/\" target=\"_blank\" rel=\"external\">ant官网</a></b><br>    <b><a href=\"http://apache.claz.org//ant/binaries/apache-ant-1.9.7-bin.zip\" target=\"_blank\" rel=\"external\">ant下载</a></b></p>\n<h5 id=\"B-1-1-2-设置环境变量\"><a href=\"#B-1-1-2-设置环境变量\" class=\"headerlink\" title=\"B-1-1-2 设置环境变量\"></a>B-1-1-2 设置环境变量</h5><pre><code>&lt;b&gt;\n  下载完毕后，假设我们把ant解压到了F盘的这个目录 ↓ \n  &lt;br/&gt;\n  F:\\soft\\apache-ant-1.9.7-bin\\\n&lt;/b&gt;\n&lt;b&gt;\n  bin文件夹在这里↓ \n  &lt;br/&gt;\n  F:\\soft\\apache-ant-1.9.7-bin\\apache-ant-1.9.7\\bin\\\n&lt;/b&gt;\n</code></pre><p>win+r(win就是左下角ctrl隔壁的小旗子)<br>运行<br>sysdm.cpl<br><img src=\"/blog/2016/08/18/java-web-crawling-startup/open_system_varaible.png\" alt=\"open_system_varaible.png\" title=\"\"><br><img src=\"/blog/2016/08/18/java-web-crawling-startup/system_properties.png\" alt=\"system_properties.png\" title=\"\"><br><img src=\"/blog/2016/08/18/java-web-crawling-startup/select-path.png\" alt=\"select-path.png\" title=\"\"></p>\n<p>  在最后面添加一条（和其他path之间用英文的;隔开，但是末尾不要加;）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">F:\\soft\\apache-ant-1.9.7-bin\\apache-ant-1.9.7\\bin</div></pre></td></tr></table></figure><br><img src=\"/blog/2016/08/18/java-web-crawling-startup/edit_system_varaiable1.png\" alt=\"edit_system_varaiable1.png\" title=\"\"><br>  （安利一下WIN10，环境变量的配置十分人性化，长这样的，羡慕吧，还不赶紧升级一起喊微软爸爸）<br><img src=\"/blog/2016/08/18/java-web-crawling-startup/edit_system_varaiable.png\" alt=\"edit_system_varaiable.png\" title=\"\"></p>\n<p>  最后确认一下环境变量到底加上没<br>win+r<br>cmd<br><img src=\"/blog/2016/08/18/java-web-crawling-startup/run_cmd.png\" alt=\"run_cmd.png\" title=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ant</div></pre></td></tr></table></figure>\n<p>  结果如图所示，就证明ant可以用了<br><img src=\"/blog/2016/08/18/java-web-crawling-startup/test_ant.png\" alt=\"test_ant.png\" title=\"\"><br>附录：<br>    <b><a href=\"https://support.microsoft.com/en-us/kb/149648\" target=\"_blank\" rel=\"external\">各种控制面板的快捷方式</a></b><br>  知道了这些，如果被人叫去修电脑，装逼效果奇佳（死屌丝码农就一修电脑的也学别人装逼，怎么装都是那副亏样，交大门口捡汽水瓶子的都比你强）</p>\n<h4 id=\"B-1-2-编译tess4j\"><a href=\"#B-1-2-编译tess4j\" class=\"headerlink\" title=\"B-1-2 编译tess4j\"></a>B-1-2 编译tess4j</h4><h5 id=\"B-1-2-1-下载tess4j\"><a href=\"#B-1-2-1-下载tess4j\" class=\"headerlink\" title=\"B-1-2-1 下载tess4j\"></a>B-1-2-1 下载tess4j</h5><p>由于tess的window傻瓜安装包只有tess3.02版本，更上面的tess3.03 3.04都需要自己编译，所以这里tess4j的源码我们也选择适应tess3.02的tess4j-2.0，想体验更高版本的新特性的高端用户可以自行编译安装tess<br>    <b><a href=\"https://sourceforge.net/projects/tess4j/files/tess4j/2.0/Tess4J-2.0-src.zip/download\" target=\"_blank\" rel=\"external\">tess4J 2.0源码</a></b><br>下载后，假设tess4J的源码放在了F盘这个目录<br>    <b>F:/tess4j</b><br>Win+r<br>cmd<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ant</div></pre></td></tr></table></figure><br>如果出了问题，请检查自己A-2步骤有没有做对，可以重新执行一下A-2<br>编译完毕后，就可以试用了<br><b><a href=\"TODO\">DEMO</a></b></p>\n<h2 id=\"htmlunit\"><a href=\"#htmlunit\" class=\"headerlink\" title=\"htmlunit\"></a>htmlunit</h2><h3 id=\"htmlunit-简介\"><a href=\"#htmlunit-简介\" class=\"headerlink\" title=\"htmlunit 简介\"></a>htmlunit 简介</h3><p>htmlunit是一个模拟浏览器的工具。一般的爬虫可以通过httpClient 的get post方法实现，但是有些网站针对爬虫和攻击作了一些限制，他们会通过JS代码生成一些验证参数，如果不想花心思研究这些js代码，最方便的就是模拟浏览器直接点击渲染后的html元素。<br>    <b><a href=\"http://htmlunit.sourceforge.net/\" target=\"_blank\" rel=\"external\">htmlunit官网</a></b><br>    <b><a href=\"https://sourceforge.net/projects/htmlunit/files/latest/download\" target=\"_blank\" rel=\"external\">htmlunit下载</a></b><br><b><a href=\"TODO\">DEMO</a></b></p>\n<h2 id=\"Jsoup\"><a href=\"#Jsoup\" class=\"headerlink\" title=\"Jsoup\"></a>Jsoup</h2><h3 id=\"Jsoup-简介\"><a href=\"#Jsoup-简介\" class=\"headerlink\" title=\"Jsoup 简介\"></a>Jsoup 简介</h3><p>Jsoup可以将纯文本的html转换成java对象，让用户可以进行诸如CSS Select之类的操作，让爬虫更加方便快捷。<br>    <b><a href=\"https://jsoup.org/\" target=\"_blank\" rel=\"external\">Jsoup官网</a></b><br><b><a href=\"TODO\">DEMO</a></b></p>\n","excerpt":"","more":"<h2 id=\"A-tesseract-ocr\"><a href=\"#A-tesseract-ocr\" class=\"headerlink\" title=\"A tesseract ocr\"></a>A tesseract ocr</h2><h3 id=\"A-1-tesseract-ocr简介\"><a href=\"#A-1-tesseract-ocr简介\" class=\"headerlink\" title=\"A-1 tesseract ocr简介\"></a>A-1 tesseract ocr简介</h3><p>  一句话概括，tesseract ocr（下文简称为tess）是惠普研发的一个文字图像识别组件，原本是用来给识别扫描仪扫出来的图片，后来进化得越来越妖，连一些简单的扭曲验证码图片也能识别成文字了。<br>比较正规的介绍请看这里↓<br><b><a href=\"https://github.com/tesseract-ocr/tesseract\">tess官网</a></b></p>\n<h3 id=\"A-2-安装tess\"><a href=\"#A-2-安装tess\" class=\"headerlink\" title=\"A-2 安装tess\"></a>A-2 安装tess</h3><h4 id=\"A-2-1-安装visual-C-2013\"><a href=\"#A-2-1-安装visual-C-2013\" class=\"headerlink\" title=\"A-2-1 安装visual C++ 2013\"></a>A-2-1 安装visual C++ 2013</h4><p>  windows版的tess需要依赖visual C++ 2013<br>  <b><a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=40784\">visual C++ 2013下载</a></b><br>下载完毕后双击安装</p>\n<h3 id=\"A-2-2-安装tesseract-ocr\"><a href=\"#A-2-2-安装tesseract-ocr\" class=\"headerlink\" title=\"A-2-2 安装tesseract ocr\"></a>A-2-2 安装tesseract ocr</h3><p>  如无意外该步骤全程都需要翻墙</p>\n<h6 id=\"下载tess\"><a href=\"#下载tess\" class=\"headerlink\" title=\"下载tess\"></a><a href=\"https://sourceforge.net/projects/tesseract-ocr-alt/files/tesseract-ocr-setup-3.02.02.exe/download\">下载tess</a></h6><p>  双击安装，一些步骤需要注意下</p>\n<h2 id=\"B-tess4j\"><a href=\"#B-tess4j\" class=\"headerlink\" title=\"B tess4j\"></a>B tess4j</h2><p>  让java可以通过JNA调用tess接口，进行图像识别的工具。（不懂JNA是啥的可以问google，实在不行问百度。认不认识JNA对于阅读本文没有影响）</p>\n<h6 id=\"tess4j官网\"><a href=\"#tess4j官网\" class=\"headerlink\" title=\"tess4j官网\"></a><a href=\"http://tess4j.sourceforge.net/\">tess4j官网</a></h6><h3 id=\"B-1-编译tess4j\"><a href=\"#B-1-编译tess4j\" class=\"headerlink\" title=\"B-1 编译tess4j\"></a>B-1 编译tess4j</h3><p>  网上并不容易找到预编译好又能用的tess4j，自己动手丰衣足食。（当然用maven也是可以的，但由于tess4j比较依赖本地环境，即使用maven弄下来了也可能会因为环境问题导致各种运行时错误。）</p>\n<h4 id=\"B-1-1-安装ant\"><a href=\"#B-1-1-安装ant\" class=\"headerlink\" title=\"B-1-1 安装ant\"></a>B-1-1 安装ant</h4><h5 id=\"B-1-1-1-下载ant\"><a href=\"#B-1-1-1-下载ant\" class=\"headerlink\" title=\"B-1-1-1 下载ant\"></a>B-1-1-1 下载ant</h5><p>  tess4j可以通过apache ant来进行编译<br>    <b><a href=\"http://ant.apache.org/\">ant官网</a></b><br>    <b><a href=\"http://apache.claz.org//ant/binaries/apache-ant-1.9.7-bin.zip\">ant下载</a></b></p>\n<h5 id=\"B-1-1-2-设置环境变量\"><a href=\"#B-1-1-2-设置环境变量\" class=\"headerlink\" title=\"B-1-1-2 设置环境变量\"></a>B-1-1-2 设置环境变量</h5><pre><code>&lt;b&gt;\n  下载完毕后，假设我们把ant解压到了F盘的这个目录 ↓ \n  &lt;br/&gt;\n  F:\\soft\\apache-ant-1.9.7-bin\\\n&lt;/b&gt;\n&lt;b&gt;\n  bin文件夹在这里↓ \n  &lt;br/&gt;\n  F:\\soft\\apache-ant-1.9.7-bin\\apache-ant-1.9.7\\bin\\\n&lt;/b&gt;\n</code></pre><p>win+r(win就是左下角ctrl隔壁的小旗子)<br>运行<br>sysdm.cpl<br><img src=\"/blog/2016/08/18/java-web-crawling-startup/open_system_varaible.png\" alt=\"open_system_varaible.png\" title=\"\"><br><img src=\"/blog/2016/08/18/java-web-crawling-startup/system_properties.png\" alt=\"system_properties.png\" title=\"\"><br><img src=\"/blog/2016/08/18/java-web-crawling-startup/select-path.png\" alt=\"select-path.png\" title=\"\"></p>\n<p>  在最后面添加一条（和其他path之间用英文的;隔开，但是末尾不要加;）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">F:\\soft\\apache-ant-1.9.7-bin\\apache-ant-1.9.7\\bin</div></pre></td></tr></table></figure><br><img src=\"/blog/2016/08/18/java-web-crawling-startup/edit_system_varaiable1.png\" alt=\"edit_system_varaiable1.png\" title=\"\"><br>  （安利一下WIN10，环境变量的配置十分人性化，长这样的，羡慕吧，还不赶紧升级一起喊微软爸爸）<br><img src=\"/blog/2016/08/18/java-web-crawling-startup/edit_system_varaiable.png\" alt=\"edit_system_varaiable.png\" title=\"\"></p>\n<p>  最后确认一下环境变量到底加上没<br>win+r<br>cmd<br><img src=\"/blog/2016/08/18/java-web-crawling-startup/run_cmd.png\" alt=\"run_cmd.png\" title=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ant</div></pre></td></tr></table></figure>\n<p>  结果如图所示，就证明ant可以用了<br><img src=\"/blog/2016/08/18/java-web-crawling-startup/test_ant.png\" alt=\"test_ant.png\" title=\"\"><br>附录：<br>    <b><a href=\"https://support.microsoft.com/en-us/kb/149648\">各种控制面板的快捷方式</a></b><br>  知道了这些，如果被人叫去修电脑，装逼效果奇佳（死屌丝码农就一修电脑的也学别人装逼，怎么装都是那副亏样，交大门口捡汽水瓶子的都比你强）</p>\n<h4 id=\"B-1-2-编译tess4j\"><a href=\"#B-1-2-编译tess4j\" class=\"headerlink\" title=\"B-1-2 编译tess4j\"></a>B-1-2 编译tess4j</h4><h5 id=\"B-1-2-1-下载tess4j\"><a href=\"#B-1-2-1-下载tess4j\" class=\"headerlink\" title=\"B-1-2-1 下载tess4j\"></a>B-1-2-1 下载tess4j</h5><p>由于tess的window傻瓜安装包只有tess3.02版本，更上面的tess3.03 3.04都需要自己编译，所以这里tess4j的源码我们也选择适应tess3.02的tess4j-2.0，想体验更高版本的新特性的高端用户可以自行编译安装tess<br>    <b><a href=\"https://sourceforge.net/projects/tess4j/files/tess4j/2.0/Tess4J-2.0-src.zip/download\">tess4J 2.0源码</a></b><br>下载后，假设tess4J的源码放在了F盘这个目录<br>    <b>F:/tess4j</b><br>Win+r<br>cmd<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ant</div></pre></td></tr></table></figure><br>如果出了问题，请检查自己A-2步骤有没有做对，可以重新执行一下A-2<br>编译完毕后，就可以试用了<br><b><a href=\"TODO\">DEMO</a></b></p>\n<h2 id=\"htmlunit\"><a href=\"#htmlunit\" class=\"headerlink\" title=\"htmlunit\"></a>htmlunit</h2><h3 id=\"htmlunit-简介\"><a href=\"#htmlunit-简介\" class=\"headerlink\" title=\"htmlunit 简介\"></a>htmlunit 简介</h3><p>htmlunit是一个模拟浏览器的工具。一般的爬虫可以通过httpClient 的get post方法实现，但是有些网站针对爬虫和攻击作了一些限制，他们会通过JS代码生成一些验证参数，如果不想花心思研究这些js代码，最方便的就是模拟浏览器直接点击渲染后的html元素。<br>    <b><a href=\"http://htmlunit.sourceforge.net/\">htmlunit官网</a></b><br>    <b><a href=\"https://sourceforge.net/projects/htmlunit/files/latest/download\">htmlunit下载</a></b><br><b><a href=\"TODO\">DEMO</a></b></p>\n<h2 id=\"Jsoup\"><a href=\"#Jsoup\" class=\"headerlink\" title=\"Jsoup\"></a>Jsoup</h2><h3 id=\"Jsoup-简介\"><a href=\"#Jsoup-简介\" class=\"headerlink\" title=\"Jsoup 简介\"></a>Jsoup 简介</h3><p>Jsoup可以将纯文本的html转换成java对象，让用户可以进行诸如CSS Select之类的操作，让爬虫更加方便快捷。<br>    <b><a href=\"https://jsoup.org/\">Jsoup官网</a></b><br><b><a href=\"TODO\">DEMO</a></b></p>\n"}],"PostAsset":[{"_id":"source/_posts/WNDR-4300-OpenWrt/openNcpa.png","post":"cis4pwiuc00009k9jzq42jcwt","slug":"openNcpa.png","modified":1,"renderable":1},{"_id":"source/_posts/WNDR-4300-OpenWrt/property.png","post":"cis4pwiuc00009k9jzq42jcwt","slug":"property.png","modified":1,"renderable":1},{"_id":"source/_posts/WNDR-4300-OpenWrt/selectEtherNet.png","post":"cis4pwiuc00009k9jzq42jcwt","slug":"selectEtherNet.png","modified":1,"renderable":1},{"_id":"source/_posts/WNDR-4300-OpenWrt/selectIPV4.png","post":"cis4pwiuc00009k9jzq42jcwt","slug":"selectIPV4.png","modified":1,"renderable":1},{"_id":"source/_posts/WNDR-4300-OpenWrt/setIPV4.png","post":"cis4pwiuc00009k9jzq42jcwt","slug":"setIPV4.png","modified":1,"renderable":1},{"_id":"source/_posts/java-web-crawling-startup/edit_system_varaiable.png","post":"cis4pwiur00059k9jqyg9rzpd","slug":"edit_system_varaiable.png","modified":1,"renderable":1},{"_id":"source/_posts/java-web-crawling-startup/edit_system_varaiable1.png","post":"cis4pwiur00059k9jqyg9rzpd","slug":"edit_system_varaiable1.png","modified":1,"renderable":1},{"_id":"source/_posts/java-web-crawling-startup/open_system_varaible.png","post":"cis4pwiur00059k9jqyg9rzpd","slug":"open_system_varaible.png","modified":1,"renderable":1},{"_id":"source/_posts/java-web-crawling-startup/run_cmd.png","post":"cis4pwiur00059k9jqyg9rzpd","slug":"run_cmd.png","modified":1,"renderable":1},{"_id":"source/_posts/java-web-crawling-startup/select-path.png","post":"cis4pwiur00059k9jqyg9rzpd","slug":"select-path.png","modified":1,"renderable":1},{"_id":"source/_posts/java-web-crawling-startup/system_properties.png","post":"cis4pwiur00059k9jqyg9rzpd","slug":"system_properties.png","modified":1,"renderable":1},{"_id":"source/_posts/java-web-crawling-startup/test_ant.png","post":"cis4pwiur00059k9jqyg9rzpd","slug":"test_ant.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/bind-credit-card.png","post":"cis4pwiur00049k9jmxk91j6c","slug":"bind-credit-card.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/bind-credit-card2.png","post":"cis4pwiur00049k9jmxk91j6c","slug":"bind-credit-card2.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/charge.png","post":"cis4pwiur00049k9jmxk91j6c","slug":"charge.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/selectLocation.png","post":"cis4pwiur00049k9jmxk91j6c","slug":"selectLocation.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/selectLocation2.png","post":"cis4pwiur00049k9jmxk91j6c","slug":"selectLocation2.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/selectServer.png","post":"cis4pwiur00049k9jmxk91j6c","slug":"selectServer.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/selectServer2.png","post":"cis4pwiur00049k9jmxk91j6c","slug":"selectServer2.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/selectServer3.png","post":"cis4pwiur00049k9jmxk91j6c","slug":"selectServer3.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/selectServer4.png","post":"cis4pwiur00049k9jmxk91j6c","slug":"selectServer4.png","modified":1,"renderable":1},{"_id":"source/_posts/build-shadowsocks-server/vultr2016-1.jpg","post":"cis4pwiur00049k9jmxk91j6c","slug":"vultr2016-1.jpg","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cis4pwiur00059k9jqyg9rzpd","category_id":"cis4pwiur00039k9jp13d6q9r","_id":"cis4pwiv700099k9jx11j3ypk"},{"post_id":"cis4pwiuc00009k9jzq42jcwt","category_id":"cis4pwiur00039k9jp13d6q9r","_id":"cis4pwiv7000c9k9jt8ofsonb"},{"post_id":"cis4pwiur00049k9jmxk91j6c","category_id":"cis4pwiur00039k9jp13d6q9r","_id":"cis4pwiv7000d9k9j88t15qwb"}],"PostTag":[{"post_id":"cis4pwiuc00009k9jzq42jcwt","tag_id":"cis4pwiur00029k9jrplzx2w3","_id":"cis4pwiv700089k9jwrywrsh8"},{"post_id":"cis4pwiur00049k9jmxk91j6c","tag_id":"cis4pwiur00029k9jrplzx2w3","_id":"cis4pwiv7000b9k9jksimcx9n"},{"post_id":"cis4pwiur00059k9jqyg9rzpd","tag_id":"cis4pwiv7000a9k9jhm1nsqra","_id":"cis4pwiv7000g9k9jybyowrlq"},{"post_id":"cis4pwiur00059k9jqyg9rzpd","tag_id":"cis4pwiv7000e9k9jbqtraqq8","_id":"cis4pwiv7000h9k9jxgzw6032"},{"post_id":"cis4pwiur00059k9jqyg9rzpd","tag_id":"cis4pwiv7000f9k9j99v7l8ge","_id":"cis4pwiv7000i9k9j680sk564"}],"Tag":[{"name":"科学上网","_id":"cis4pwiur00029k9jrplzx2w3"},{"name":"java","_id":"cis4pwiv7000a9k9jhm1nsqra"},{"name":"爬虫","_id":"cis4pwiv7000e9k9jbqtraqq8"},{"name":"文字图像识别","_id":"cis4pwiv7000f9k9j99v7l8ge"}]}}